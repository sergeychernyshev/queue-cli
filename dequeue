#!/usr/bin/python
import sys
import subprocess 
import ConfigParser
import getopt 
import queue
import time

options, arguments = getopt.getopt(sys.argv[1:], 'vc:s::')

# Check if we got at least two (non-option) arguments, queue name and command
if len(arguments) < 2:
    sys.stderr.write("Usage: dequeue [-v] <queue-name> <command> ...\n")
    sys.exit(2)

# System-wide configuration file
config_file = '/etc/queue-cli/queue-cli.conf';

# How many seconds to sleep when there are no messages in the queue (default = 0, is not to sleep)
sleep_when_no_messages = 0;

# Reading options
verbose = False
for o, a in options:
    if o == "-v":
        verbose = True
    elif o =="-c":
        config_file = a
    elif o =="-s":
        sleep_when_no_messages = int(a)

# Send log messaged to STDERR if -v was passed
def log(log_message):
    if (verbose):
        sys.stderr.write(log_message + "\n")

queue_instance = queue.get(config_file, arguments[0])
message = queue_instance.dequeue()

if (message is None):
    log("No messages in the queue")
    if (sleep_when_no_messages > 0):
        log("Sleeping for " + str(sleep_when_no_messages) + " seconds before exisitng")
        time.sleep(sleep_when_no_messages)
    sys.exit(0)

command = arguments[1:]

log("Executing: " + " ".join(command) + " passing message into STDIN")

# send textual representation of the message over to STDIN of the process
proc = subprocess.Popen(command, stdin=subprocess.PIPE)
proc.communicate(str(message))
exitcode = proc.returncode

if (exitcode > 0):
    log("Command exit code: " + str(exitcode))
    log("Returning message back to the queue and exiting with same code")
    message.release()
    exit(exitcode)

log("Command executed successfully, deleting message from the queue")
message.delete()
